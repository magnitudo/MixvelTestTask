// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProviderOneSearchRequest : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The dateFrom property</summary>
        public DateTimeOffset? DateFrom { get; set; }
        /// <summary>The dateTo property</summary>
        public DateTimeOffset? DateTo { get; set; }
        /// <summary>The from property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? From { get; set; }
#nullable restore
#else
        public string From { get; set; }
#endif
        /// <summary>The maxPrice property</summary>
        public double? MaxPrice { get; set; }
        /// <summary>The to property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? To { get; set; }
#nullable restore
#else
        public string To { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.ProviderOneSearchRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.ProviderOneSearchRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.ProviderOneSearchRequest();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "dateFrom", n => { DateFrom = n.GetDateTimeOffsetValue(); } },
                { "dateTo", n => { DateTo = n.GetDateTimeOffsetValue(); } },
                { "from", n => { From = n.GetStringValue(); } },
                { "maxPrice", n => { MaxPrice = n.GetDoubleValue(); } },
                { "to", n => { To = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("dateFrom", DateFrom);
            writer.WriteDateTimeOffsetValue("dateTo", DateTo);
            writer.WriteStringValue("from", From);
            writer.WriteDoubleValue("maxPrice", MaxPrice);
            writer.WriteStringValue("to", To);
        }
    }
}
#pragma warning restore CS0618
